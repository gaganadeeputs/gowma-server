package org.mihy.gowma.repository;

import org.mihy.gowma.model.BaseModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.IncorrectUpdateSemanticsDataAccessException;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;

import java.util.UUID;

/**
 * Created by gdeepu on 19/11/17.
 */
public class BaseRepository {

    @Autowired
    protected NamedParameterJdbcTemplate namedParameterJdbcTemplate;

    private final String idColumnName="id";
    public int insert(final BaseModel domain, final String insertSQL, final SqlParameterSource paramSource
                      ) {
        return insert(domain,insertSQL,paramSource,true);
    }

    public int insert(final BaseModel domain, final String insertSQL, final SqlParameterSource paramSource,
                      final boolean checkRowCount) {

        final KeyHolder keyHolder = new GeneratedKeyHolder();

        final int rowCount = this.namedParameterJdbcTemplate.update(insertSQL, paramSource, keyHolder,
                new String[]{this.idColumnName,});

        if (checkRowCount && rowCount != 1) {
            throw new IncorrectUpdateSemanticsDataAccessException("Failed to insert entity: " + domain.getClass().getName());
        }

        if (rowCount == 1) {
            // Get id  which are generated by Postgres
            domain.setId(((Number) keyHolder.getKeys().get(this.idColumnName)).intValue());
        }

        return rowCount;
    }
}
